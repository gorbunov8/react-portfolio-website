{"ast":null,"code":"import { __values } from \"tslib\";\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function takeLast(count) {\n  return count <= 0 ? function () {\n    return EMPTY;\n  } : operate(function (source, subscriber) {\n    var buffer = [];\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      buffer.push(value);\n      count < buffer.length && buffer.shift();\n    }, function () {\n      var e_1, _a;\n\n      try {\n        for (var buffer_1 = __values(buffer), buffer_1_1 = buffer_1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1.next()) {\n          var value = buffer_1_1.value;\n          subscriber.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (buffer_1_1 && !buffer_1_1.done && (_a = buffer_1.return)) _a.call(buffer_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      subscriber.complete();\n    }, undefined, function () {\n      buffer = null;\n    }));\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,KAAT,QAAsB,qBAAtB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AA0CA,OAAM,SAAUC,QAAV,CAAsBC,KAAtB,EAAmC;EACvC,OAAOA,KAAK,IAAI,CAAT,GACH;IAAM;EAAK,CADR,GAEHH,OAAO,CAAC,UAACI,MAAD,EAASC,UAAT,EAAmB;IAKzB,IAAIC,MAAM,GAAQ,EAAlB;IACAF,MAAM,CAACG,SAAP,CACE,IAAIN,kBAAJ,CACEI,UADF,EAEE,UAACG,KAAD,EAAM;MAEJF,MAAM,CAACG,IAAP,CAAYD,KAAZ;MAGAL,KAAK,GAAGG,MAAM,CAACI,MAAf,IAAyBJ,MAAM,CAACK,KAAP,EAAzB;IACD,CARH,EASE;;;;QAGE,KAAoB,iCAAMC,4BAA1B,EAA0B,gBAA1B,EAA0BA,4BAA1B,EAA4B;UAAvB,IAAMJ,KAAK,mBAAX;UACHH,UAAU,CAACQ,IAAX,CAAgBL,KAAhB;QACD;;;;;;;;;;;;;MACDH,UAAU,CAACS,QAAX;IACD,CAhBH,EAkBEC,SAlBF,EAmBE;MAEET,MAAM,GAAG,IAAT;IACD,CAtBH,CADF;EA0BD,CAhCM,CAFX;AAmCD","names":["EMPTY","operate","OperatorSubscriber","takeLast","count","source","subscriber","buffer","subscribe","value","push","length","shift","buffer_1_1","next","complete","undefined"],"sourceRoot":"","sources":["../../../../src/internal/operators/takeLast.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}