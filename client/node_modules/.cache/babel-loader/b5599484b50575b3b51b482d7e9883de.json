{"ast":null,"code":"import { EmptyError } from '../util/EmptyError';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function single(predicate) {\n  return operate(function (source, subscriber) {\n    var hasValue = false;\n    var singleValue;\n    var seenValue = false;\n    var index = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      seenValue = true;\n\n      if (!predicate || predicate(value, index++, source)) {\n        hasValue && subscriber.error(new SequenceError('Too many matching values'));\n        hasValue = true;\n        singleValue = value;\n      }\n    }, function () {\n      if (hasValue) {\n        subscriber.next(singleValue);\n        subscriber.complete();\n      } else {\n        subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n      }\n    }));\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAT,QAA2B,oBAA3B;AAGA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAqFA,OAAM,SAAUC,MAAV,CAAoBC,SAApB,EAA2F;EAC/F,OAAOH,OAAO,CAAC,UAACI,MAAD,EAASC,UAAT,EAAmB;IAChC,IAAIC,QAAQ,GAAG,KAAf;IACA,IAAIC,WAAJ;IACA,IAAIC,SAAS,GAAG,KAAhB;IACA,IAAIC,KAAK,GAAG,CAAZ;IACAL,MAAM,CAACM,SAAP,CACE,IAAIT,kBAAJ,CACEI,UADF,EAEE,UAACM,KAAD,EAAM;MACJH,SAAS,GAAG,IAAZ;;MACA,IAAI,CAACL,SAAD,IAAcA,SAAS,CAACQ,KAAD,EAAQF,KAAK,EAAb,EAAiBL,MAAjB,CAA3B,EAAqD;QACnDE,QAAQ,IAAID,UAAU,CAACO,KAAX,CAAiB,IAAId,aAAJ,CAAkB,0BAAlB,CAAjB,CAAZ;QACAQ,QAAQ,GAAG,IAAX;QACAC,WAAW,GAAGI,KAAd;MACD;IACF,CATH,EAUE;MACE,IAAIL,QAAJ,EAAc;QACZD,UAAU,CAACQ,IAAX,CAAgBN,WAAhB;QACAF,UAAU,CAACS,QAAX;MACD,CAHD,MAGO;QACLT,UAAU,CAACO,KAAX,CAAiBJ,SAAS,GAAG,IAAIT,aAAJ,CAAkB,oBAAlB,CAAH,GAA6C,IAAIF,UAAJ,EAAvE;MACD;IACF,CAjBH,CADF;EAqBD,CA1Ba,CAAd;AA2BD","names":["EmptyError","SequenceError","NotFoundError","operate","OperatorSubscriber","single","predicate","source","subscriber","hasValue","singleValue","seenValue","index","subscribe","value","error","next","complete"],"sourceRoot":"","sources":["../../../../src/internal/operators/single.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}